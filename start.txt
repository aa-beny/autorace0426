. setup_turtlebot.sh
 export ROS_DOMAIN_ID=15
source install/setup.bash
echo $ROS_DOMAIN_ID
ros2 run rqt_reconfigure rqt_reconfigure
colcon build --symlink-install
yolo
ros2 launch object_detection object_detection_launch.py 

ros2 run detect_lane key_pub_signs

1. motor->
ros2 launch turtlebot3_bringup robot.launch.py 

1.1 keyboard
ros2 run teleop_twist_keyboard teleop_twist_keyboard

1.2 stop car
ros2 topic pub -1 /control/go_stop std_msgs/Bool "{data: true}"

ros2 topic pub /cmd_vel geometry_msgs/Twist "{linear: {x: 0.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: 0.0}}" 
2. detect lane
ros2 launch detect_lane detect_lane_launch.py calibration:=True/False

2.1 single lane: data: 0(dual) 1(yellow) 2 (white)
$ ros2 topic pub -1 /detect/lane_mode std_msgs/Int64 "{data: 1}"

3. core -> start first 
ros2 run core core

4. control lane -> after core
ros2 run control control_lane

4.1<anothher way>
ros2 run control control_auto_avoidance

5. traffic light
5.1 topic pub
ros2 topic pub -1 /detect/traffic_light std_msgs/String "{data: GREEN}"
ros2 topic pub -1 /detect/signs std_msgs/String "{data: cave}"

5.2 detect traffic light
$ ros2 launch detect_lane detect_traffic_launch.py calibration:=True/False

6 change domain id
$ export ROS_DOMAIN_ID=15

7 install sudo
 . setup_turtlebot.sh 
 
8 cartographer
ros2 launch turtlebot3_cartographer cartographer.launch.py

9 savemap

ros2 run nav2_map_server map_saver_cli -f ~/work/map
10 navigation2
ros2 launch turtlebot3_navigation2 navigation2.launch.py map:=$HOME/work/map.yaml

10.1 listen topic
ros2 topic echo /initialpose
ros2 topic echo /amcl_pose


ros2 param list /planner_server
ros2 param list /controller_server

ros2 param dump /controller_server > controller_params.yaml
ros2 param dump /planner_server > planner_params.yaml

cat controller_params.yaml
cat planner_params.yaml

13 pose to pose
ros2 run nv2 navigation



15 only lidar
ros2 launch rplidar_ros rplidar_a1_launch.py


 
ros2 topic list

 ls /dev/ttyACM0
 ros2 run control control_lane

colcon build --symlink-install
ros2 run detect_lane key_pub_signs 



ros2 topic echo /detect/yellow_fraction
ros2 topic echo /detect/white_fraction

ros2 topic list

ros2 run nav2_map_server map_saver_cli -f ~/map

ros2 launch turtlebot3_navigation2 navigation2.launch.py map:=$HOME/map.yaml

ros2 run turtlebot3_teleop teleop_keyboard


nvidia-smi
lsmod | grep nvidia
tegrastats

navigation

python3
import torch
torch.cuda.is_available()
torch.cuda.get_device_name(0)
torch.cuda.device(0)
quit()


確認 NVIDIA 驅動是否安裝正確
執行以下指令檢查 NVIDIA 驅動是否正確安裝：
dpkg -l | grep nvidia
如果沒有驅動程式，請使用 JetPack SDK（適用於 Jetson 設備）重新安裝驅動。
nvidia-smi
注意：Jetson 平台可能不支援標準的 nvidia-smi 工具，而是使用 jetson-stats 工具進行監控。安裝指令：
sudo apt-get install jetson-stats
jtop


nvcc --version
python3 -c "import torch; print('PyTorch:', torch.__version__, 'CUDA:', torch.version.cuda)"


